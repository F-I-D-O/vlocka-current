<?php  require_once 'databaze.php';/** * Odstarňuje zpětné uvozovky z řetězce, nebo pole řetězců. * @param mix $data řetězec nebo pole  z kterého chceme odstarnit zpětná lomítka * @return mix $data upravený řetězec */function odstran_lomitka($data){ 	if(get_magic_quotes_gpc()){		if(is_array($data)){			array_map('odstran_lomitka', $data);				}		else{			stripslashes($data);		}	}	return $data;}function odstran_odsazeni($data){
	if(is_array($data)){		echo("fff");
		array_map('odstran_odsazeni', $data);
	}
	else{		$nahradit = array("\r" => "", "\n" => "");
		$data = strtr($data, $nahradit);
	}
	return $data;
}/*** Přesměruje na poslední stranu*/function posledni_strana0(){	if(!isset($_SERVER["HTTP_REFERER"])){		header("Location: index.php");	}	else{		header("Location: " . $_SERVER["HTTP_REFERER"]);	}	exit;}/** * Přesměruje na poslední stranu s chybovým parametrem * @param string $chyba chybová zpráva */function posledni_strana1($chyba){	$adresa = explode("?", $_SERVER[HTTP_REFERER]); 	header("Location: $adresa[0]?$chyba");	exit;}/** * Přesměruje na poslední stranu s chybovým parametrem, navíc zachová původní parametr * @param string $chyba chybová zpráva * @param string $odkud původní parametr stránky */function posledni_strana2($chyba, $odkud){	$adresa = explode("?", $_SERVER[HTTP_REFERER]); 	header("Location: $adresa[0]?$odkud&$chyba");	exit;}/** * refresh strany s chybovým parametrem * @param string $zprava chybová zpráva * @param string $odkud původní parametr */function tato_strana2($zprava, $odkud){	$adresa = explode("?", $_SERVER[PHP_SELF]);	header("Location: $adresa[0]?$odkud&$zprava");	exit;}/** * ze zadaného dne, měsíce a roku utvoří datum a zkontroluje zdali existuje * @param int $den den * @param int $mesic měsíc * @param int $rok rok * @return DateTime|boolean datum nebo false pokud datum neexistuje */function datum($den, $mesic, $rok){	if(checkdate($mesic, $den, $rok)){		$datum = new DateTime($den . "-" . $mesic . "-" . $rok);		return $datum;	}	else{		return FALSE;	}	}/** * Ověřuje zda má uživatel dostatečné oprávnění * @param int $sila požadované oprávnění * @return boolean true pokud je oprávnění dostatečné, false pokud je oprávnění nedostatečné. */function opravneni($sila){	if(!array_key_exists("role", $_SESSION) || $_SESSION["role"] > $sila){		return FALSE;	}	else{		return TRUE;	}}/** * Generuje odkay na profil * @param string $profilID id profilu * @param string $databaze databáze * @return string odkay na profil */function odkaz_na_profil($profilID, $databaze){	$sql = "SELECT prezdivka FROM profily WHERE profilID = " . $profilID;	$prezdivka = $databaze->querySingleItem($sql);	$odkaz = /* '<a href="http://' . $_SERVER["SERVER_NAME"] . '/profil.php?profilID=' .  $profilID 	. '">' . */$prezdivka/*  .  '</a>' */;	return $odkaz;}function odesli_mail($adresy, $predmet, $text){	foreach ($adresy as $adresa){		mail($adresa, $predmet, $text, 'From: vlocka');	}}?>